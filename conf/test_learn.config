// for now it needs either crg config or local config to be given by the user
// TODO make this config stand alone. No need for other configs.

params {

    config_profile_name        = 'Test Learn profile'
    config_profile_description = 'Minimal test dataset to check if a model that should learn actually does'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '8.GB'
    max_time   = '6.h'
    
    // Input data
    csv         = "${projectDir}/bin/tests/test_data/titanic/titanic_stimulus.csv"
    exp_conf    = "${projectDir}/bin/tests/test_data/titanic/titanic_stimulus.json"  // TODO make the data transformations available to titanic data types
    model       = "${projectDir}/bin/tests/test_model/titanic_model.py"
    tune_conf   = "${projectDir}/bin/tests/test_model/titanic_model_cpu.yaml"

}

// Limit resources so that this can run on GitHub Actions or take benefit from the check_max function
process {
    maxRetries = params.max_retries
    errorStrategy = params.err_start

    withLabel:process_low {
        cpus   = { check_max( 1                  , 'cpus'    ) }
        memory = { check_max( 4.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 10.m  * task.attempt, 'time'    ) }
    }
    withLabel:process_medium{
        cpus   = { check_max( 2                  , 'cpus'    ) }
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 30.m  * task.attempt, 'time'    ) }
    }
    withLabel:process_high {
        cpus   = { check_max( 4                  , 'cpus'    ) }
        memory = { check_max( 8.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 1.h  * task.attempt, 'time'    ) }
    }
}
