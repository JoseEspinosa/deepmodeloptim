/* config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: "CHECK_TORCH_MODEL" {

        // request gpus
        accelerator = params.max_gpus

        // with ray_results_dirpath flag the results of ray will be conatined within the specific process subworkflow insetad of the home dir
        ext.args = { [ params.check_model_num_samples ? "-n ${params.check_model_num_samples}" : '',
                        "--ray_results_dirpath ./ray_results",
                        params.debug_mode ? "--debug_mode True" : ''
                        ].flatten().unique(false).join(' ').trim()
        }
    }

    withName: "TORCH_TUNE" {

        // request gpus
        accelerator = params.max_gpus

        // with ray_results_dirpath flag the results of ray will be conatined within the specific process subworkflow insetad of the home dir
        ext.args = { [ "--ray_results_dirpath ./ray_results",
                        params.debug_mode ? "--debug_mode True" : ''
                        ].flatten().unique(false).join(' ').trim()
        }

        // the prefix is the input data csv filename without last extantion ( all other dots are changed to underscores) + the specific experimental config json name (dynamically created during interpret json step)
        ext.prefix = { "${combination_key}".split(' ')[0].split('\\.')[0..-2].join("_") + "-" + "${combination_key}".split(' ')[2] }
        
        // the output directory is called by the unique name of the run + the time of launch.
	    // all subidrs of the output dir are called with the same schema of the prefix above, which makes them process instance specific (aka unique).
        // at the time of publishing, files are copied and then renamed to a standard naming convention based on their extention and sffixes. This is done through saveAs mode. The files need to be coopied because the original file unrenamed will be further used by the pipeline and it's name has to stay unique (thanks to the prefix), otherwise there wil be filename confilcts.
        publishDir = [
            path: { "${params.outdir}/${workflow.runName}_" + "${workflow.start}/".replaceAll('[-:]', '_').split('\\.')[0] + "/" + "${combination_key}".split(' ')[0].split('\\.')[0..-2].join("_") + "-" + "${combination_key}".split(' ')[2] },
            mode: "copy",
            overwrite: true,
            saveAs: { filename -> if (filename.endsWith("-metrics.csv")) "best_model-metrics.csv"
                else if (filename.endsWith("-config.json")) "best_model-tuneconfig.json"
                else if (filename.endsWith("-model.pt")) "best_model.pt"
                else if (filename.endsWith("-optimizer.pt")) "best_model-optimizer.pt"
                else if (filename.endsWith(".csv")) "training_data.csv"
                else if (filename.endsWith(".json")) "experiment_config.json"
                else filename
             }
        ]
    }

    withName: "STIMULUS_ANALYSIS_DEFAULT" {

        // the output directory is called by the unique name of the run + the time of launch.
        // it has subdirs that identify the class of analysises like -> /analysis_default/. 
        // the subsubdirs have the name of the split informstion used to create the test set. So conceptually all analyses carried on the same test set are under the same subsubdir. 
        publishDir = [
            path: { "${params.outdir}/${workflow.runName}_" + "${workflow.start}/".replaceAll('[-:]', '_').split('\\.')[0] + "/analysis_default/" + "${split_transform_key}" },
            mode: params.publish_dir_mode,
            overwrite: true
        ]
    }
}

